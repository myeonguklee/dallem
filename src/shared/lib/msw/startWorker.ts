import { worker } from './browser';

export async function startWorker() {
  if (process.env.NODE_ENV === 'development') {
    await worker.start({
      onUnhandledRequest: 'warn', // Ï≤òÎ¶¨ÎêòÏßÄ ÏïäÏùÄ ÏöîÏ≤≠ÏùÑ Í≤ΩÍ≥†Î°ú ÌëúÏãú
      serviceWorker: {
        url: '/mockServiceWorker.js',
      },
      // ÎîîÎ≤ÑÍπÖÏùÑ ÏúÑÌïú Î°úÍπÖ ÌôúÏÑ±Ìôî
      quiet: false,
    });
    console.log('üîÑ MSW enabled for development');

    // MSWÍ∞Ä ÌôúÏÑ±ÌôîÎêòÏóàÎäîÏßÄ ÌôïÏù∏
    console.log('üîç MSW handlers:', worker.listHandlers());

    // Î™®Îì† ÏöîÏ≤≠ÏùÑ Í∞ÄÎ°úÏ±ÑÎèÑÎ°ù ÏÑ§Ï†ï
    worker.events.on('request:start', ({ request }) => {
      console.log('üåê MSW: Request started:', request.method, request.url);
    });

    worker.events.on('request:end', ({ request }) => {
      console.log('‚úÖ MSW: Request ended:', request.method, request.url);
    });

    worker.events.on('unhandledException', ({ error, request }) => {
      console.error('‚ùå MSW: Unhandled exception:', error, request);
    });
  }
}
